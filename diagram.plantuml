@startuml name

' class UpdateManager << (S, #FF7700) Singleton >> 

' class EntityMovement

class PlayerInput

note left of PlayerWeapon
    PlayerWeapon.cs는 Weapon.cs 리스트에 
    Weapon.cs가 삽입되어있는 Prefab을 할당하여 사용합니다.
end note
class PlayerWeapon
{
    Weapon[] weapons
}

abstract class Entity

class Weapon

class Hammer

' class SMG

' class HandGun

' note left of Item
' Item.cs에서만 OnTriggerEnter를 정의해두고 하위클래스는 ActWhenTriggerEnter을 
' override하면 TriggerEnter시 작성한 내용이 실행됩니다.
' end note
' abstract class Item
' {
'     # virtual void ActWhenTriggerEnter(other);
' }

note left of Player
    Player.cs에서 PlayerInput.cs를 통해 Input값을 체크한 뒤 
    공격키 입력이 들어오면 현제 사용 중인 무기의 Attack() 메서드를
    호출하여 공격을 실행합니다.
end note
class Player

' class Grenade
' {
'     # override void ActWhenTriggerEnter(other);
' }

' class Ammo
' {
'     - ItemData itemData

'     # override void ActWhenTriggerEnter(other);
' }

' class Coin
' {
'     - ItemData itemData

'     # override void ActWhenTriggerEnter(other);
' }

' class Heart
' {
'     - ItemData itemData

'     # override void ActWhenTriggerEnter(other);
' }

' Item <|-- Weapon
' Weapon <|-- SMG
' Weapon <|-- HandGun
Weapon <|-- Hammer

' Item <|-- Grenade
' Item <|-- Ammo
' Item <|-- Coin
' Item <|-- Heart

Entity <|-- Player
Player *-- PlayerInput
Player *-- PlayerWeapon

@enduml